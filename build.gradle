plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'checkstyle'
	id "org.owasp.dependencycheck" version "7.3.2"
	id 'jacoco'
}

group = 'com.virtual.hub'
version = '0.0.1-SNAPSHOT'
apply plugin: 'java'
compileJava {
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.5")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation('org.flywaydb:flyway-core:9.1.6')
	implementation('com.googlecode.json-simple:json-simple:1.1.1')

	implementation('org.postgresql:postgresql:42.4.2')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly "io.springfox:springfox-swagger2:2.4.0"
	compileOnly "io.springfox:springfox-swagger-ui:2.4.0"

	implementation "com.vladmihalcea:hibernate-types-52:2.3.4"

	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	annotationProcessor 'org.projectlombok:lombok'
	implementation('com.google.maps:google-maps-services:2.1.2')
	implementation ('io.grpc:grpc-netty:1.51.0')
	implementation 'com.google.ortools:ortools-java:9.4.1874'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


bootJar {
	requiresUnpack '**/ortools-darwin*.jar', '**/ortools-win32*.jar', '**/ortools-linux*.jar'
}



tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.01
			}
		}
	}
}

build.dependsOn jacocoTestCoverageVerification